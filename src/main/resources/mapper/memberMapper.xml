<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.bookJeog.mapper.MemberMapper">
    <!-- 관리자 페이지 조회-->
    <select id="selectAllPersonal" resultType="personalMemberVO">
        select pm.id, member_email, member_name, member_phone, member_mileage, member_status,
        date(createdDate) as createdDate, date(updatedDate) as updatedDate
        from tbl_personal_member pm
        join tbl_member m
        on pm.id = m.id and m.member_type = '개인'
        <where>
            <if test="keyword != null and keyword != ''">
                member_name like concat('%', #{keyword}, '%')
            </if>
        </where>
        limit #{rowCount}
            offset #{offset}
    </select>

    <!--페이지네이션용 카운트-->
    <select id="countAllPersonal" resultType="_int">
        select count(*)
        from tbl_personal_member pm
                 join tbl_member m
                      on pm.id = m.id
        <where>
            <if test="keyword != null and keyword != ''">
                member_name like concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>


    <!--일반 회원가입-->
    <insert id="insertCommonMember" useGeneratedKeys="true" keyProperty="id">
        insert into tbl_member (member_type)
        values(#{memberType})
    </insert>


    <!--일반 회원가입-->
    <insert id="insertPersonalMember">
        insert into tbl_personal_member (id, member_email, member_password, member_name, member_birth, member_gender, member_phone, member_nickname)
        values (#{id}, #{memberEmail}, #{memberPassword}, #{memberName}, #{memberBirth}, #{memberGender}, #{memberPhone}, #{memberNickName})
    </insert>


    <!--이메일 중복검사-->
    <select id="selectByEmail" resultType="personalMemberVO">
        select id, member_email, member_password, member_name, member_mileage, member_status, member_birth, member_gender, member_phone, member_nickname
        from tbl_personal_member
        where member_email = #{memberEmail}
    </select>


    <!--로그인-->
    <select id="loginPersonal" resultType="personalMemberVO">
        select id, member_email, member_password, member_name, member_mileage, member_status, member_birth, member_gender, member_phone, member_nickname
        from tbl_personal_member
        where member_email = #{memberEmail} and member_password = #{memberPassword}
    </select>

    <!--  기업회원 통합검색 조회  -->
    <select id="selectSponsorMembersWithProfile" resultType="sponsorMemberProfileDTO">
        select
            sm.id,
            sm.sponsor_name,
            f.file_name,
            f.file_path,
            m.createdDate as created_date,
            sm.sponsor_main_address,
            sm.sponsor_sub_address,
            sm.sponsor_phone_number
        from tbl_sponsor_member sm
                 join tbl_member m on sm.id = m.id
                 join tbl_member_profile mp on mp.member_id = m.id
                 join tbl_file f on f.id = mp.id
        where sm.sponsor_name like concat('%', #{keyword}, '%')
          and m.member_type = 'SPONSOR'
        limit 3
    </select>

    <!--  기업회원 검색 결과 개수 조회  -->
    <select id="selectSponsorMembersTotal" resultType="_int">
        select
            count(*)
        from tbl_sponsor_member sm
                 join tbl_member m on sm.id = m.id
                 join tbl_member_profile mp on mp.member_id = m.id
                 join tbl_file f on f.id = mp.id
        where sm.sponsor_name like concat('%', #{keyword}, '%')
          and m.member_type = 'SPONSOR'
    </select>

    <!--  기업회원 전체페이지 조회(무한스크롤)  -->
    <select id="selectAllSponsorMembers" resultType="sponsorMemberProfileDTO">
        select
            sm.id,
            sm.sponsor_name,
            f.file_name,
            f.file_path,
            m.createdDate as created_date,
            sm.sponsor_main_address,
            sm.sponsor_sub_address,
            sm.sponsor_phone_number
        from tbl_sponsor_member sm
                 join tbl_member m on sm.id = m.id
                 join tbl_member_profile mp on mp.member_id = m.id
                 join tbl_file f on f.id = mp.id
        where sm.sponsor_name like concat('%', #{keyword}, '%')
        and m.member_type = 'SPONSOR'
        <choose>
            <when test="sortType == 'name'">
                order by sm.sponsor_name collate utf8mb4_unicode_ci asc
            </when>
            <otherwise>
                order by m.createdDate desc
            </otherwise>
        </choose>
        limit 8 offset #{offset}
    </select>

    <!--비밀번호 찾기-->
    <select id="searchPassword" resultType="personalMemberVO">
        select id, member_email, member_password, member_name, member_mileage, member_status, member_birth, member_gender, member_phone, member_nickname
        from tbl_personal_member
        where member_email = #{memberEmail} and member_name = #{memberName} and member_birth = #{memberBirth} and member_gender = #{memberGender};
    </select>

    <!-- 시퀀스로 회원 찾기, 개인 or 단체 회원에 멤버 타입 또는 가입 상태 등의 추가 정보-->
    <select id="selectById" resultType="memberVO">
        select *
        from tbl_member
            where id = #{id}
    </select>

    <select id="selectPersonalMemberById" resultType="personalMemberVO">
        select member_name
        from tbl_personal_member
        where id = #{id}
    </select>

    <select id="selectSponsorMemberById" resultType="sponsorMemberVO">
        select sponsor_name
        from tbl_sponsor_member
        where id = #{id}
    </select>

    <update id="updatePersonalMemberStatus">
        update tbl_personal_member
        set member_status = 'SUSPENDED'
        where id = #{memberId}
    </update>

    <!-- 단체 회원 가입 상태 변경 -->
    <update id="updateSponsorMemberStatus">
        update tbl_sponsor_member
        set sponsor_member_status = 'SUSPENDED'
        where id = #{sponsorId}
    </update>

    <!-- 단체 회원 목록 조회 -->
    <select id="selectAllSponsor" resultType="sponsorMemberVO">
        select sm.id, sponsor_name, sponsor_email, sponsor_main_address, sponsor_phone_number, sponsor_member_status,
        date(m.createdDate) as createdDate, date(m.updatedDate) as updatedDate
        from tbl_sponsor_member sm
        join tbl_member m
        on sm.id = m.id and m.member_type = '단체'
        <where>
            <if test="keyword != null and keyword != ''">
                sponsor_name like concat('%', #{keyword}, '%') or
                sponsor_phone_number like concat('%', #{keyword}, '%') or
                sponsor_email like concat('%', #{keyword}, '%')
            </if>
        </where>
        limit #{rowCount}
        offset #{offset}
    </select>

    <select id="countAllSponsor" resultType="_int">
        select count(*)
        from tbl_sponsor_member sm
        join tbl_member m
        on sm.id = m.id and m.member_type = '단체'
        <where>
            <if test="keyword != null and keyword != ''">
                sponsor_name like concat('%', #{keyword}, '%') or
                sponsor_phone_number like concat('%', #{keyword}, '%') or
                sponsor_email like concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>
    <!-- 단체 회원 등록 -->
    <insert id="insertSponsorMember">
        insert into tbl_sponsor_member (id, sponsor_id, sponsor_password, sponsor_name, sponsor_main_address, sponsor_sub_address, sponsor_phone_number, sponsor_email)
        values (#{id}, #{sponsorId}, #{sponsorPassword}, #{sponsorName}, #{sponsorMainAddress}, #{sponsorSubAddress}, #{sponsorPhoneNumber}, #{sponsorEmail})
    </insert>


    <select id="selectAllAdmin" resultType="adminVO">
        select a.id, admin_id, admin_password ,admin_name, admin_department, admin_grade, admin_member_status,
        date(m.createdDate) as createdDate, date(m.updatedDate) as updatedDate
        from tbl_admin a
        join tbl_member m
        on a.id = m.id and m.member_type = '관리자'
        <where>
            <if test="keyword != null and keyword != ''">
                admin_name like concat('%', #{keyword}, '%') or
                admin_department like concat('%', #{keyword}, '%') or
                admin_grade like concat('%', #{keyword}, '%')
            </if>
        </where>
        limit #{rowCount}
        offset #{offset}
    </select>


    <select id="countAllAdmin" resultType="_int">
        select count(*)
        from tbl_admin a
        join tbl_member m
        on a.id = m.id and m.member_type = '관리자'
        <where>
            <if test="keyword != null and keyword != ''">
                admin_name like concat('%', #{keyword}, '%') or
                admin_department like concat('%', #{keyword}, '%') or
                admin_grade like concat('%', #{keyword}, '%')
            </if>
        </where>
    </select>

    <insert id="insertAdmin">
        insert into tbl_admin (id, admin_id, admin_password, admin_name, admin_department, admin_grade)
        values (#{id}, #{adminId}, #{adminPassword}, #{adminName}, #{adminDepartment}, #{adminGrade})
    </insert>

    <!--비밀번호 변경-->
    <update id="updatePassword">
        update tbl_personal_member
        set member_password = #{newPasswd}
        where member_email = #{memberEmail}
    </update>



    <!--독후감 많이쓴사람-->
    <select id="selectTopBookPostMember" resultType="personalMemberVO">
        SELECT member_name, member_nickname, COUNT(p.id) AS post_count
        FROM tbl_personal_member m
                 JOIN tbl_post p
                      ON m.id = p.member_id
        where post_type = 'BOOK_POST'
        GROUP BY m.id
        ORDER BY post_count DESC
        limit 4
    </select>



    <!--썸네일 가져오기-->
    <select id="selectMemberInfoWithThumbnail" resultType="personalMemberPostMemberProfileDTO">
        select member_nickname, file_path, file_name, count(p.id) as post_count
        FROM tbl_personal_member m
                 JOIN tbl_post p
                      ON m.id = p.member_id
                 join tbl_member_profile mp
                      on m.id = mp.member_id
                 join tbl_file f
                      on mp.id = f.id
        where post_type = 'BOOK_POST'
        ORDER BY post_count DESC
        limit 4
    </select>



    <!--댓글 알람-->

    <!--  내가 쓴 독후감 개수 조회  -->
    <select id="selectMyBookPostCount" resultType="_int">
        select count(*)
        from tbl_post p
                 join tbl_book_post bp on p.id = bp.id
        where member_id = #{memberId}
    </select>

    <!-- 내 이번 달 쓴 독후감 수 -->
    <select id="selectMyMonthlyBookPostCount" resultType="_int">
        select count(*)
        from tbl_post p
        join tbl_book_post bp on p.id = bp.id
        where p.createdDate >= date_sub(now(), interval 30 day)
          and p.member_id = #{memberId}
    </select>

    <!--  이번 달 독후감 쓴 회원들의 평균 독후감  -->
    <select id="selectAverageBookPostCount" resultType="_int">
        select count(*) / count(distinct p.member_id) as avg_post_count
        from tbl_post p
                 join tbl_book_post bp on p.id = bp.id
        where p.createdDate >= date_sub(now(), interval 30 day)
    </select>

    <!--  내 마일리지 조회  -->
    <select id="selectMyMileage" resultType="_int">
        select member_mileage
        from tbl_personal_member
        where id = #{memberId}
    </select>

    <!--  내 프로필 이미지 조회  -->
    <select id="selectMyProfile" resultType="fileVO">
        select file_path, file_name
        from tbl_file f
        join tbl_member_profile mp on f.id = mp.id
        where mp.member_id = #{memberId}
    </select>

</mapper>



